{"version":3,"file":"static/js/921.bf4347a8.chunk.js","mappings":"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","sources":["components/VideoSection.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport ReactPlayer from 'react-player';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\n\n// Import videos\nconst videos = [\n  {\n    id: 1,\n    title: \"Afinity uses data and artificial intelligence to transform the quality of    interpersonal interactions\",\n    url: \"https://res.cloudinary.com/ddzllbqlv/video/upload/v1748342620/zjtzamruh1ztnsjntam7.mp4\",\n    buttonId: \"what-we-do\"\n  },\n  {\n    id: 2,\n    title: \"How We Do It\",\n    url: \"https://res.cloudinary.com/ddzllbqlv/video/upload/v1748342623/kfeixt00owusza7oaoxw.mp4\",\n    buttonId: \"how-we-do-it\"\n  },\n  {\n    id: 3,\n    title: \"What We Deliver\",\n    url: \"https://res.cloudinary.com/ddzllbqlv/video/upload/v1748342633/zdwyblkjivgsog2q2fad.mp4\",\n    buttonId: \"what-we-deliver\"\n  }\n];\n\nconst VIDEO_DURATION = 11000; // milliseconds (11s)\n\nconst VideoSection = () => {\n  const [activeVideo, setActiveVideo] = useState(0);\n  const [showButton, setShowButton] = useState(true);\n  const [nextButtonIndex, setNextButtonIndex] = useState(1);\n  const [timerKey, setTimerKey] = useState(0);\n  const [isMobile, setIsMobile] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\n  const [isHovering, setIsHovering] = useState(false);\n  const [videoError, setVideoError] = useState(false);\n  const navigate = useNavigate();\n  \n  const playerRef = useRef(null);\n  const timerRef = useRef(null);\n  const buttonTimeoutRef = useRef(null);\n  const resizeTimeoutRef = useRef(null);\n\n  // Memoized video variants to prevent recreation\n  const videoVariants = useMemo(() => ({\n    hidden: { opacity: 0 },\n    visible: { opacity: 1, transition: { duration: 1 } },\n    exit: { opacity: 0, transition: { duration: 0.5 } }\n  }), []);\n\n  const buttonVariants = useMemo(() => ({\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -20,\n      transition: { duration: 0.2 }\n    }\n  }), []);\n\n  const cursorVariants = useMemo(() => ({\n    default: { \n      x: cursorPosition.x - 16, \n      y: cursorPosition.y - 16,\n      scale: 1\n    },\n    hover: { \n      x: cursorPosition.x - 16, \n      y: cursorPosition.y - 16, \n      scale: 1.5,\n      backgroundColor: \"rgba(255, 255, 255, 0.4)\",\n      mixBlendMode: \"difference\"\n    }\n  }), [cursorPosition.x, cursorPosition.y]);\n\n  // Debounced resize handler\n  const handleResize = useCallback(() => {\n    if (resizeTimeoutRef.current) {\n      clearTimeout(resizeTimeoutRef.current);\n    }\n    \n    resizeTimeoutRef.current = setTimeout(() => {\n      setIsMobile(window.innerWidth < 768);\n    }, 100);\n  }, []);\n\n  // Check for mobile devices with debouncing\n  useEffect(() => {\n    setIsMobile(window.innerWidth < 768);\n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (resizeTimeoutRef.current) {\n        clearTimeout(resizeTimeoutRef.current);\n      }\n    };\n  }, [handleResize]);\n\n  // Throttled cursor tracking\n  const throttledCursorUpdate = useCallback((e) => {\n    setCursorPosition({ x: e.clientX, y: e.clientY });\n  }, []);\n\n  useEffect(() => {\n    if (isMobile) return;\n    \n    let rafId;\n    const trackCursor = (e) => {\n      if (rafId) return;\n      \n      rafId = requestAnimationFrame(() => {\n        throttledCursorUpdate(e);\n        rafId = null;\n      });\n    };\n\n    window.addEventListener('mousemove', trackCursor, { passive: true });\n    \n    return () => {\n      window.removeEventListener('mousemove', trackCursor);\n      if (rafId) {\n        cancelAnimationFrame(rafId);\n      }\n    };\n  }, [isMobile, throttledCursorUpdate]);\n\n  // Optimized timer management\n  const startVideoTimer = useCallback(() => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    timerRef.current = setInterval(() => {\n      setActiveVideo(current => {\n        const nextIndex = (current + 1) % videos.length;\n        setNextButtonIndex((nextIndex + 1) % videos.length);\n        return nextIndex;\n      });\n    }, VIDEO_DURATION);\n  }, []);\n\n  useEffect(() => {\n    startVideoTimer();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [startVideoTimer]);\n\n  // Optimized button show logic\n  useEffect(() => {\n    if (buttonTimeoutRef.current) {\n      clearTimeout(buttonTimeoutRef.current);\n    }\n    \n    setShowButton(false);\n    buttonTimeoutRef.current = setTimeout(() => {\n      if (nextButtonIndex < videos.length) {\n        setShowButton(true);\n      }\n    }, 3000);\n\n    return () => {\n      if (buttonTimeoutRef.current) {\n        clearTimeout(buttonTimeoutRef.current);\n      }\n    };\n  }, [activeVideo, nextButtonIndex]);\n\n  const handleVideoChange = useCallback((index, isManualClick = true) => {\n    if (index === activeVideo) {\n      // If it's the \"How We Do It\" video button\n      if (videos[index].buttonId === \"how-we-do-it\") {\n        navigate('/how-we-do-it');\n        return;\n      }\n      return; // Prevent unnecessary updates for other videos\n    }\n    \n    setShowButton(false);\n    setActiveVideo(index);\n    setNextButtonIndex((index + 1) % videos.length);\n    \n    if (isManualClick) {\n      setTimerKey(prevKey => prevKey + 1);\n      startVideoTimer();\n    }\n  }, [activeVideo, startVideoTimer, navigate]);\n\n  const handleButtonHover = useCallback((hovering) => {\n    if (!isMobile) {\n      setIsHovering(hovering);\n    }\n  }, [isMobile]);\n\n  // Memoized current video data\n  const currentVideo = useMemo(() => videos[activeVideo], [activeVideo]);\n  const nextVideo = useMemo(() => videos[nextButtonIndex], [nextButtonIndex]);\n\n  // Add error handling to ReactPlayer\n  const handleVideoError = () => {\n    console.error('Video failed to load');\n    setVideoError(true);\n  };\n\n  return (\n    <div className=\"relative w-full h-screen overflow-hidden\">\n      {/* Background Video */}\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key={`video-${activeVideo}`}\n          className=\"absolute inset-0 w-full h-full pointer-events-none\"\n          variants={videoVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n        >\n          <ReactPlayer\n            ref={playerRef}\n            url={currentVideo.url}\n            playing\n            loop\n            muted\n            width=\"100%\"\n            height=\"100%\"\n            playsinline\n            onError={handleVideoError}\n            style={{ objectFit: 'cover', position: 'absolute', top: 0, left: 0, pointerEvents: 'none' }}\n            config={{\n              file: {\n                attributes: {\n                  preload: 'auto',\n                  style: {\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'cover',\n                  }\n                }\n              }\n            }}\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-b from-black/40 via-black/20 to-black/70\" />\n        </motion.div>\n      </AnimatePresence>\n\n      {/* Button Nav - Desktop (Top Right) */}\n      {!isMobile && (\n        <div className=\"absolute top-8 right-[calc(2rem--190px)] z-[5000] flex flex-row gap-8 pointer-events-auto\">\n          {videos.map((video, index) => (\n            <div key={video.id} className=\"flex flex-col group\">\n              <button\n                id={video.buttonId}\n                className={`text-white uppercase text-lm font-medium tracking-wider ${\n                  activeVideo === index ? 'opacity-100' : 'opacity-40 hover:opacity-100'\n                } transition-opacity duration-300 text-left`}\n                onClick={() => handleVideoChange(index, true)}\n                onMouseEnter={() => handleButtonHover(true)}\n                onMouseLeave={() => handleButtonHover(false)}\n              >\n                {video.buttonId === 'how-we-do-it' ? 'How We Do It' : video.buttonId.replace(/-/g, ' ')}\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Button Nav - Mobile/Tablet (Top Right as Circles) */}\n      {isMobile && (\n        <div className=\"absolute bottom-20 right-8 z-20 flex flex-row gap-4\">\n          {videos.map((video, index) => (\n            <button\n              key={video.id}\n              id={video.buttonId}\n              className={`w-3 h-3 rounded-full ${activeVideo === index ? 'bg-green-600' : 'bg-white/50'} transition-all duration-300`}\n              onClick={() => handleVideoChange(index, true)}\n              aria-label={`Video ${index + 1}`}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Text content - Responsive positioning */}\n      <div className=\"absolute inset-0 flex flex-col justify-center text-left z-10 px-4 sm:px-6 md:px-8 lg:ml-40 lg:px-4\">\n        <motion.h1\n          className={`text-2xl xs:text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold text-white mb-3 sm:mb-4 md:mb-6 max-w-full sm:max-w-2xl md:max-w-3xl lg:max-w-4xl xl:max-w-5xl leading-tight sm:leading-tight md:leading-tight ${\n            currentVideo.buttonId === 'how-we-do-it' ? ' hover:text-green-400 transition-colors duration-300' : ''\n          }`}\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3, duration: 0.5 }}\n          key={`title-${activeVideo}`}\n          onClick={() => currentVideo.buttonId === 'how-we-do-it' && navigate('/how-we-do-it')}\n          onMouseEnter={() => currentVideo.buttonId === 'how-we-do-it' && setIsHovering(true)}\n          onMouseLeave={() => currentVideo.buttonId === 'how-we-do-it' && setIsHovering(false)}\n          style={currentVideo.buttonId === 'how-we-do-it' ? { cursor: 'pointer' } : {}}\n        >\n          {currentVideo.title}\n        </motion.h1>\n\n        <motion.p\n          className=\"text-sm xs:text-base sm:text-lg md:text-xl lg:text-2xl text-white/80 max-w-full sm:max-w-md md:max-w-lg lg:max-w-xl leading-relaxed sm:leading-relaxed\"\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.1, duration: 0.1 }}\n          key={`desc-${activeVideo}`}\n        >\n          Find out how we help businesses pair better.\n        </motion.p>\n      </div>\n\n      {/* Next Button - Responsive */}\n      <AnimatePresence>\n        {showButton && nextButtonIndex !== activeVideo && (\n          <motion.button\n            variants={buttonVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            className={`absolute ${isMobile ? 'bottom-8 left-4 right-4 w-auto' : 'bottom-10 left-1/2 transform -translate-x-1/2'} bg-green-600/30 backdrop-blur-sm text-white px-4 py-2 sm:px-6 sm:py-2 rounded-full border border-white/30 hover:bg-white/30 transition-all z-30 cursor-pointer text-sm sm:text-base`}\n            onClick={() => handleVideoChange(nextButtonIndex, true)}\n            onMouseEnter={() => handleButtonHover(true)}\n            onMouseLeave={() => handleButtonHover(false)}\n            style={{ zIndex: 40 }}\n          >\n            Next: {videos[nextButtonIndex].title.split(' ').slice(0, 3).join(' ')} →\n          </motion.button>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default VideoSection;"],"names":["videos","id","title","url","buttonId","VideoSection","activeVideo","setActiveVideo","useState","showButton","setShowButton","nextButtonIndex","setNextButtonIndex","timerKey","setTimerKey","isMobile","setIsMobile","cursorPosition","setCursorPosition","x","y","isHovering","setIsHovering","videoError","setVideoError","navigate","useNavigate","playerRef","useRef","timerRef","buttonTimeoutRef","resizeTimeoutRef","videoVariants","useMemo","hidden","opacity","visible","transition","duration","exit","buttonVariants","type","stiffness","damping","handleResize","default","scale","hover","backgroundColor","mixBlendMode","useCallback","current","clearTimeout","setTimeout","window","innerWidth","useEffect","addEventListener","removeEventListener","throttledCursorUpdate","e","clientX","clientY","rafId","trackCursor","requestAnimationFrame","passive","cancelAnimationFrame","startVideoTimer","clearInterval","setInterval","nextIndex","length","handleVideoChange","index","isManualClick","arguments","undefined","prevKey","handleButtonHover","hovering","currentVideo","_jsxs","className","children","_jsx","AnimatePresence","mode","motion","div","variants","initial","animate","ReactPlayer","ref","playing","loop","muted","width","height","playsinline","onError","handleVideoError","console","error","style","objectFit","position","top","left","pointerEvents","config","file","attributes","preload","concat","map","video","onClick","onMouseEnter","onMouseLeave","replace","h1","delay","cursor","p","button","zIndex","split","slice","join"],"sourceRoot":""}