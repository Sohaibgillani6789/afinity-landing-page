{"ast":null,"code":"var _jsxFileName = \"G:\\\\aifinity\\\\src\\\\utils\\\\lazyload.jsx\";\nimport React, { Suspense, lazy } from 'react';\n\n// Optimized lazy loading utility for components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const lazyLoad = (importFunc, {\n  fallback = null\n} = {}) => {\n  const LazyComponent = /*#__PURE__*/lazy(() => {\n    return Promise.all([importFunc(),\n    // Add a small delay in development, but not in production\n    new Promise(resolve => setTimeout(resolve, process.env.NODE_ENV === 'production' ? 0 : 100))]).then(([moduleExports]) => moduleExports).catch(error => {\n      console.error('Error loading component:', error);\n      return {\n        default: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error loading component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 31\n        }, this)\n      };\n    });\n  });\n  return props => /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: fallback,\n    children: /*#__PURE__*/_jsxDEV(LazyComponent, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","Suspense","lazy","jsxDEV","_jsxDEV","lazyLoad","importFunc","fallback","LazyComponent","Promise","all","resolve","setTimeout","process","env","NODE_ENV","then","moduleExports","catch","error","console","default","children","fileName","_jsxFileName","lineNumber","columnNumber","props"],"sources":["G:/aifinity/src/utils/lazyload.jsx"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\r\n\r\n// Optimized lazy loading utility for components\r\nexport const lazyLoad = (importFunc, { fallback = null } = {}) => {\r\n  const LazyComponent = lazy(() => {\r\n    return Promise.all([\r\n      importFunc(),\r\n      // Add a small delay in development, but not in production\r\n      new Promise(resolve => \r\n        setTimeout(resolve, process.env.NODE_ENV === 'production' ? 0 : 100)\r\n      )\r\n    ])\r\n    .then(([moduleExports]) => moduleExports)\r\n    .catch(error => {\r\n      console.error('Error loading component:', error);\r\n      return { default: () => <div>Error loading component</div> };\r\n    });\r\n  });\r\n  \r\n  return props => (\r\n    <Suspense fallback={fallback}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,IAAI,QAAQ,OAAO;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,UAAU,EAAE;EAAEC,QAAQ,GAAG;AAAK,CAAC,GAAG,CAAC,CAAC,KAAK;EAChE,MAAMC,aAAa,gBAAGN,IAAI,CAAC,MAAM;IAC/B,OAAOO,OAAO,CAACC,GAAG,CAAC,CACjBJ,UAAU,CAAC,CAAC;IACZ;IACA,IAAIG,OAAO,CAACE,OAAO,IACjBC,UAAU,CAACD,OAAO,EAAEE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,CAAC,GAAG,GAAG,CACrE,CAAC,CACF,CAAC,CACDC,IAAI,CAAC,CAAC,CAACC,aAAa,CAAC,KAAKA,aAAa,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO;QAAEE,OAAO,EAAEA,CAAA,kBAAMjB,OAAA;UAAAkB,QAAA,EAAK;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAE,CAAC;IAC9D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOC,KAAK,iBACVvB,OAAA,CAACH,QAAQ;IAACM,QAAQ,EAAEA,QAAS;IAAAe,QAAA,eAC3BlB,OAAA,CAACI,aAAa;MAAA,GAAKmB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CACX;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}