{"ast":null,"code":"import _objectSpread from\"G:/aifinity/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{Suspense,lazy}from'react';// Optimized lazy loading utility for components\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const lazyLoad=function(importFunc){let{fallback=null}=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const LazyComponent=/*#__PURE__*/lazy(()=>{return Promise.all([importFunc(),// Add a small delay in development, but not in production\nnew Promise(resolve=>setTimeout(resolve,process.env.NODE_ENV==='production'?0:100))]).then(_ref=>{let[moduleExports]=_ref;return moduleExports;}).catch(error=>{console.error('Error loading component:',error);return{default:()=>/*#__PURE__*/_jsx(\"div\",{children:\"Error loading component\"})};});});return props=>/*#__PURE__*/_jsx(Suspense,{fallback:fallback,children:/*#__PURE__*/_jsx(LazyComponent,_objectSpread({},props))});};","map":{"version":3,"names":["React","Suspense","lazy","jsx","_jsx","lazyLoad","importFunc","fallback","arguments","length","undefined","LazyComponent","Promise","all","resolve","setTimeout","process","env","NODE_ENV","then","_ref","moduleExports","catch","error","console","default","children","props","_objectSpread"],"sources":["G:/aifinity/src/utils/lazyload.jsx"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\r\n\r\n// Optimized lazy loading utility for components\r\nexport const lazyLoad = (importFunc, { fallback = null } = {}) => {\r\n  const LazyComponent = lazy(() => {\r\n    return Promise.all([\r\n      importFunc(),\r\n      // Add a small delay in development, but not in production\r\n      new Promise(resolve => \r\n        setTimeout(resolve, process.env.NODE_ENV === 'production' ? 0 : 100)\r\n      )\r\n    ])\r\n    .then(([moduleExports]) => moduleExports)\r\n    .catch(error => {\r\n      console.error('Error loading component:', error);\r\n      return { default: () => <div>Error loading component</div> };\r\n    });\r\n  });\r\n  \r\n  return props => (\r\n    <Suspense fallback={fallback}>\r\n      <LazyComponent {...props} />\r\n    </Suspense>\r\n  );\r\n};"],"mappings":"gGAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,IAAI,KAAQ,OAAO,CAE7C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,QAAAA,CAACC,UAAU,CAA+B,IAA7B,CAAEC,QAAQ,CAAG,IAAK,CAAC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3D,KAAM,CAAAG,aAAa,cAAGT,IAAI,CAAC,IAAM,CAC/B,MAAO,CAAAU,OAAO,CAACC,GAAG,CAAC,CACjBP,UAAU,CAAC,CAAC,CACZ;AACA,GAAI,CAAAM,OAAO,CAACE,OAAO,EACjBC,UAAU,CAACD,OAAO,CAAEE,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAG,CAAC,CAAG,GAAG,CACrE,CAAC,CACF,CAAC,CACDC,IAAI,CAACC,IAAA,MAAC,CAACC,aAAa,CAAC,CAAAD,IAAA,OAAK,CAAAC,aAAa,GAAC,CACxCC,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,CAAEE,OAAO,CAAEA,CAAA,gBAAMrB,IAAA,QAAAsB,QAAA,CAAK,yBAAuB,CAAK,CAAE,CAAC,CAC9D,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,MAAO,CAAAC,KAAK,eACVvB,IAAA,CAACH,QAAQ,EAACM,QAAQ,CAAEA,QAAS,CAAAmB,QAAA,cAC3BtB,IAAA,CAACO,aAAa,CAAAiB,aAAA,IAAKD,KAAK,CAAG,CAAC,CACpB,CACX,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}