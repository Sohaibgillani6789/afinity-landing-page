{"ast":null,"code":"var _jsxFileName = \"G:\\\\aifinity\\\\src\\\\components\\\\blogpost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from './Navbar'; // Assuming Navbar is in components\nimport Footer from './Footer'; // Assuming Footer is in components\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WISP_BASE_API_ENDPOINT = 'https://www.wisp.blog/api/v1/ad98debc-5b29-4d92-86ab-0a765957ebe9/posts';\nconst BlogPost = () => {\n  _s();\n  const {\n    slug\n  } = useParams(); // Get the slug from the URL parameter (e.g., /blog/my-first-post)\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchSingleBlogPost = async () => {\n      if (!slug) {\n        // Ensure slug exists before fetching\n        setError('No blog post slug provided.');\n        setLoading(false);\n        return;\n      }\n      try {\n        // Construct the API URL to fetch a single post by its slug\n        // Based on your image, it's typically WISP_BASE_API_ENDPOINT + /:slug\n        // However, some APIs use a query parameter: WISP_BASE_API_ENDPOINT?slug=YOUR_SLUG\n        // I will use the query parameter approach as it's common and safer if direct slug path isn't explicit\n        const response = await fetch(`${WISP_BASE_API_ENDPOINT}?slug=${slug}`);\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(`Failed to fetch post: ${response.status} ${response.statusText} - ${errorData.message || 'Unknown error'}`);\n        }\n        const data = await response.json();\n        // Wisp's API might return an array even when querying by slug, so we take the first item\n        const fetchedPost = data.posts && data.posts.length > 0 ? data.posts[0] : null;\n        if (fetchedPost) {\n          setPost(fetchedPost);\n        } else {\n          setError('Blog post not found.'); // No post returned for the given slug\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error(\"Error fetching single Wisp blog post:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSingleBlogPost();\n  }, [slug]); // Re-run effect whenever the slug parameter changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"w-16 h-16 border-4 border-pink-500 border-t-transparent rounded-full\",\n        animate: {\n          rotate: 360\n        },\n        transition: {\n          duration: 1,\n          repeat: Infinity,\n          ease: \"linear\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] text-center text-red-500 text-xl py-16\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] text-center text-white text-xl py-16\",\n      children: \"Blog post not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"container mx-auto px-4 py-16 flex-grow\",\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl md:text-5xl font-bold mb-4 text-white\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400 mb-8\",\n        children: [\"Published on \", post.publishedAt ? new Date(post.publishedAt).toLocaleDateString() : 'Date N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prose prose-invert max-w-none text-white leading-relaxed\",\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogPost, \"JCvudjfcnJIGAQpev79UDPir4qw=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","Footer","motion","jsxDEV","_jsxDEV","WISP_BASE_API_ENDPOINT","BlogPost","_s","slug","post","setPost","loading","setLoading","error","setError","fetchSingleBlogPost","response","fetch","ok","errorData","json","Error","status","statusText","message","data","fetchedPost","posts","length","err","console","className","children","div","animate","rotate","transition","duration","repeat","Infinity","ease","fileName","_jsxFileName","lineNumber","columnNumber","initial","opacity","y","title","publishedAt","Date","toLocaleDateString","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["G:/aifinity/src/components/blogpost.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Navbar from './Navbar'; // Assuming Navbar is in components\r\nimport Footer from './Footer'; // Assuming Footer is in components\r\nimport { motion } from 'framer-motion';\r\n\r\nconst WISP_BASE_API_ENDPOINT = 'https://www.wisp.blog/api/v1/ad98debc-5b29-4d92-86ab-0a765957ebe9/posts';\r\n\r\nconst BlogPost = () => {\r\n    const { slug } = useParams(); // Get the slug from the URL parameter (e.g., /blog/my-first-post)\r\n    const [post, setPost] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchSingleBlogPost = async () => {\r\n            if (!slug) { // Ensure slug exists before fetching\r\n                setError('No blog post slug provided.');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            try {\r\n                // Construct the API URL to fetch a single post by its slug\r\n                // Based on your image, it's typically WISP_BASE_API_ENDPOINT + /:slug\r\n                // However, some APIs use a query parameter: WISP_BASE_API_ENDPOINT?slug=YOUR_SLUG\r\n                // I will use the query parameter approach as it's common and safer if direct slug path isn't explicit\r\n                const response = await fetch(`${WISP_BASE_API_ENDPOINT}?slug=${slug}`);\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    throw new Error(`Failed to fetch post: ${response.status} ${response.statusText} - ${errorData.message || 'Unknown error'}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                // Wisp's API might return an array even when querying by slug, so we take the first item\r\n                const fetchedPost = data.posts && data.posts.length > 0 ? data.posts[0] : null;\r\n\r\n                if (fetchedPost) {\r\n                    setPost(fetchedPost);\r\n                } else {\r\n                    setError('Blog post not found.'); // No post returned for the given slug\r\n                }\r\n            } catch (err) {\r\n                setError(err.message);\r\n                console.error(\"Error fetching single Wisp blog post:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchSingleBlogPost();\r\n    }, [slug]); // Re-run effect whenever the slug parameter changes\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] flex justify-center items-center\">\r\n                <motion.div\r\n                    className=\"w-16 h-16 border-4 border-pink-500 border-t-transparent rounded-full\"\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] text-center text-red-500 text-xl py-16\">\r\n                Error: {error}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!post) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] text-center text-white text-xl py-16\">\r\n                Blog post not found.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-b from-[#070c24] to-[#142454] flex flex-col\">\r\n            <Navbar />\r\n            <motion.div \r\n                className=\"container mx-auto px-4 py-16 flex-grow\"\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5 }}\r\n            >\r\n                <h1 className=\"text-4xl md:text-5xl font-bold mb-4 text-white\">\r\n                    {post.title}\r\n                </h1>\r\n                <p className=\"text-gray-400 mb-8\">\r\n                    Published on {post.publishedAt ? new Date(post.publishedAt).toLocaleDateString() : 'Date N/A'}\r\n                </p>\r\n                {/* Wisp's 'content' field likely contains HTML.\r\n                    The 'prose' classes from Tailwind CSS Typography plugin help style raw HTML.\r\n                    If you don't have this plugin installed, the styling might look basic.\r\n                    Install: `npm install @tailwindcss/typography`\r\n                    Add to `tailwind.config.js` plugins: `plugins: [require('@tailwindcss/typography')],`\r\n                */}\r\n                <div className=\"prose prose-invert max-w-none text-white leading-relaxed\" dangerouslySetInnerHTML={{ __html: post.content }} />\r\n            </motion.div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}