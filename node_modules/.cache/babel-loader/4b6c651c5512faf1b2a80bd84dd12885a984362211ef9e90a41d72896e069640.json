{"ast":null,"code":"import _defineProperty from \"G:/aifinity/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction t(t, e, i) {\n  return Math.max(t, Math.min(e, i));\n}\nclass Animate {\n  advance(e) {\n    var _this$onUpdate;\n    if (!this.isRunning) return;\n    let i = !1;\n    if (this.lerp) this.value = (s = this.value, o = this.to, n = 60 * this.lerp, r = e, function (t, e, i) {\n      return (1 - i) * t + i * e;\n    }(s, o, 1 - Math.exp(-n * r))), Math.round(this.value) === this.to && (this.value = this.to, i = !0);else {\n      this.currentTime += e;\n      const s = t(0, this.currentTime / this.duration, 1);\n      i = s >= 1;\n      const o = i ? 1 : this.easing(s);\n      this.value = this.from + (this.to - this.from) * o;\n    }\n    var s, o, n, r;\n    (_this$onUpdate = this.onUpdate) !== null && _this$onUpdate !== void 0 && _this$onUpdate.call(this, this.value, i), i && this.stop();\n  }\n  stop() {\n    this.isRunning = !1;\n  }\n  fromTo(t, e, _ref) {\n    let {\n      lerp: i = .1,\n      duration: s = 1,\n      easing: o = t => t,\n      onStart: n,\n      onUpdate: r\n    } = _ref;\n    this.from = this.value = t, this.to = e, this.lerp = i, this.duration = s, this.easing = o, this.currentTime = 0, this.isRunning = !0, n !== null && n !== void 0 && n(), this.onUpdate = r;\n  }\n}\nclass Dimensions {\n  constructor() {\n    let {\n      wrapper: t,\n      content: e,\n      autoResize: i = !0,\n      debounce: s = 250\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"resize\", () => {\n      this.onWrapperResize(), this.onContentResize();\n    });\n    _defineProperty(this, \"onWrapperResize\", () => {\n      this.wrapper === window ? (this.width = window.innerWidth, this.height = window.innerHeight) : (this.width = this.wrapper.clientWidth, this.height = this.wrapper.clientHeight);\n    });\n    _defineProperty(this, \"onContentResize\", () => {\n      this.wrapper === window ? (this.scrollHeight = this.content.scrollHeight, this.scrollWidth = this.content.scrollWidth) : (this.scrollHeight = this.wrapper.scrollHeight, this.scrollWidth = this.wrapper.scrollWidth);\n    });\n    this.wrapper = t, this.content = e, i && (this.debouncedResize = function (t, e) {\n      let i;\n      return function () {\n        let s = arguments,\n          o = this;\n        clearTimeout(i), i = setTimeout(function () {\n          t.apply(o, s);\n        }, e);\n      };\n    }(this.resize, s), this.wrapper === window ? window.addEventListener(\"resize\", this.debouncedResize, !1) : (this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize), this.wrapperResizeObserver.observe(this.wrapper)), this.contentResizeObserver = new ResizeObserver(this.debouncedResize), this.contentResizeObserver.observe(this.content)), this.resize();\n  }\n  destroy() {\n    var _this$wrapperResizeOb, _this$contentResizeOb;\n    (_this$wrapperResizeOb = this.wrapperResizeObserver) !== null && _this$wrapperResizeOb !== void 0 && _this$wrapperResizeOb.disconnect(), (_this$contentResizeOb = this.contentResizeObserver) !== null && _this$contentResizeOb !== void 0 && _this$contentResizeOb.disconnect(), window.removeEventListener(\"resize\", this.debouncedResize, !1);\n  }\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height\n    };\n  }\n}\nclass Emitter {\n  constructor() {\n    this.events = {};\n  }\n  emit(t) {\n    let i = this.events[t] || [];\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n    for (let t = 0, s = i.length; t < s; t++) i[t](...e);\n  }\n  on(t, e) {\n    var _this$events$t;\n    return (_this$events$t = this.events[t]) !== null && _this$events$t !== void 0 && _this$events$t.push(e) || (this.events[t] = [e]), () => {\n      var _this$events$t2;\n      this.events[t] = (_this$events$t2 = this.events[t]) === null || _this$events$t2 === void 0 ? void 0 : _this$events$t2.filter(t => e !== t);\n    };\n  }\n  off(t, e) {\n    var _this$events$t3;\n    this.events[t] = (_this$events$t3 = this.events[t]) === null || _this$events$t3 === void 0 ? void 0 : _this$events$t3.filter(t => e !== t);\n  }\n  destroy() {\n    this.events = {};\n  }\n}\nconst e = 100 / 6;\nclass VirtualScroll {\n  constructor(_t, _ref2) {\n    let {\n      wheelMultiplier: _e = 1,\n      touchMultiplier: _i = 1\n    } = _ref2;\n    _defineProperty(this, \"onTouchStart\", t => {\n      const {\n        clientX: e,\n        clientY: i\n      } = t.targetTouches ? t.targetTouches[0] : t;\n      this.touchStart.x = e, this.touchStart.y = i, this.lastDelta = {\n        x: 0,\n        y: 0\n      }, this.emitter.emit(\"scroll\", {\n        deltaX: 0,\n        deltaY: 0,\n        event: t\n      });\n    });\n    _defineProperty(this, \"onTouchMove\", t => {\n      const {\n          clientX: e,\n          clientY: i\n        } = t.targetTouches ? t.targetTouches[0] : t,\n        s = -(e - this.touchStart.x) * this.touchMultiplier,\n        o = -(i - this.touchStart.y) * this.touchMultiplier;\n      this.touchStart.x = e, this.touchStart.y = i, this.lastDelta = {\n        x: s,\n        y: o\n      }, this.emitter.emit(\"scroll\", {\n        deltaX: s,\n        deltaY: o,\n        event: t\n      });\n    });\n    _defineProperty(this, \"onTouchEnd\", t => {\n      this.emitter.emit(\"scroll\", {\n        deltaX: this.lastDelta.x,\n        deltaY: this.lastDelta.y,\n        event: t\n      });\n    });\n    _defineProperty(this, \"onWheel\", t => {\n      let {\n        deltaX: i,\n        deltaY: s,\n        deltaMode: o\n      } = t;\n      i *= 1 === o ? e : 2 === o ? this.windowWidth : 1, s *= 1 === o ? e : 2 === o ? this.windowHeight : 1, i *= this.wheelMultiplier, s *= this.wheelMultiplier, this.emitter.emit(\"scroll\", {\n        deltaX: i,\n        deltaY: s,\n        event: t\n      });\n    });\n    _defineProperty(this, \"onWindowResize\", () => {\n      this.windowWidth = window.innerWidth, this.windowHeight = window.innerHeight;\n    });\n    this.element = _t, this.wheelMultiplier = _e, this.touchMultiplier = _i, this.touchStart = {\n      x: null,\n      y: null\n    }, this.emitter = new Emitter(), window.addEventListener(\"resize\", this.onWindowResize, !1), this.onWindowResize(), this.element.addEventListener(\"wheel\", this.onWheel, {\n      passive: !1\n    }), this.element.addEventListener(\"touchstart\", this.onTouchStart, {\n      passive: !1\n    }), this.element.addEventListener(\"touchmove\", this.onTouchMove, {\n      passive: !1\n    }), this.element.addEventListener(\"touchend\", this.onTouchEnd, {\n      passive: !1\n    });\n  }\n  on(t, e) {\n    return this.emitter.on(t, e);\n  }\n  destroy() {\n    this.emitter.destroy(), window.removeEventListener(\"resize\", this.onWindowResize, !1), this.element.removeEventListener(\"wheel\", this.onWheel, {\n      passive: !1\n    }), this.element.removeEventListener(\"touchstart\", this.onTouchStart, {\n      passive: !1\n    }), this.element.removeEventListener(\"touchmove\", this.onTouchMove, {\n      passive: !1\n    }), this.element.removeEventListener(\"touchend\", this.onTouchEnd, {\n      passive: !1\n    });\n  }\n}\nclass Lenis {\n  constructor() {\n    let {\n      wrapper: t = window,\n      content: e = document.documentElement,\n      wheelEventsTarget: i = t,\n      eventsTarget: s = i,\n      smoothWheel: o = !0,\n      syncTouch: n = !1,\n      syncTouchLerp: r = .075,\n      touchInertiaMultiplier: l = 35,\n      duration: h,\n      easing: a = t => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n      lerp: c = !h && .1,\n      infinite: d = !1,\n      orientation: p = \"vertical\",\n      gestureOrientation: u = \"vertical\",\n      touchMultiplier: m = 1,\n      wheelMultiplier: v = 1,\n      autoResize: g = !0,\n      __experimental__naiveDimensions: S = !1\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.__isSmooth = !1, this.__isScrolling = !1, this.__isStopped = !1, this.__isLocked = !1, this.onVirtualScroll = _ref3 => {\n      let {\n        deltaX: t,\n        deltaY: e,\n        event: i\n      } = _ref3;\n      if (i.ctrlKey) return;\n      const s = i.type.includes(\"touch\"),\n        o = i.type.includes(\"wheel\");\n      if (this.options.syncTouch && s && \"touchstart\" === i.type && !this.isStopped && !this.isLocked) return void this.reset();\n      const n = 0 === t && 0 === e,\n        r = \"vertical\" === this.options.gestureOrientation && 0 === e || \"horizontal\" === this.options.gestureOrientation && 0 === t;\n      if (n || r) return;\n      let l = i.composedPath();\n      if (l = l.slice(0, l.indexOf(this.rootElement)), l.find(t => {\n        var e, i, n, r, l;\n        return (null === (e = t.hasAttribute) || void 0 === e ? void 0 : e.call(t, \"data-lenis-prevent\")) || s && (null === (i = t.hasAttribute) || void 0 === i ? void 0 : i.call(t, \"data-lenis-prevent-touch\")) || o && (null === (n = t.hasAttribute) || void 0 === n ? void 0 : n.call(t, \"data-lenis-prevent-wheel\")) || (null === (r = t.classList) || void 0 === r ? void 0 : r.contains(\"lenis\")) && !(null === (l = t.classList) || void 0 === l ? void 0 : l.contains(\"lenis-stopped\"));\n      })) return;\n      if (this.isStopped || this.isLocked) return void i.preventDefault();\n      if (this.isSmooth = this.options.syncTouch && s || this.options.smoothWheel && o, !this.isSmooth) return this.isScrolling = !1, void this.animate.stop();\n      i.preventDefault();\n      let h = e;\n      \"both\" === this.options.gestureOrientation ? h = Math.abs(e) > Math.abs(t) ? e : t : \"horizontal\" === this.options.gestureOrientation && (h = t);\n      const a = s && this.options.syncTouch,\n        c = s && \"touchend\" === i.type && Math.abs(h) > 5;\n      c && (h = this.velocity * this.options.touchInertiaMultiplier), this.scrollTo(this.targetScroll + h, Object.assign({\n        programmatic: !1\n      }, a ? {\n        lerp: c ? this.options.syncTouchLerp : 1\n      } : {\n        lerp: this.options.lerp,\n        duration: this.options.duration,\n        easing: this.options.easing\n      }));\n    }, this.onNativeScroll = () => {\n      if (!this.__preventNextScrollEvent && !this.isScrolling) {\n        const t = this.animatedScroll;\n        this.animatedScroll = this.targetScroll = this.actualScroll, this.velocity = 0, this.direction = Math.sign(this.animatedScroll - t), this.emit();\n      }\n    }, window.lenisVersion = \"1.0.42\", t !== document.documentElement && t !== document.body || (t = window), this.options = {\n      wrapper: t,\n      content: e,\n      wheelEventsTarget: i,\n      eventsTarget: s,\n      smoothWheel: o,\n      syncTouch: n,\n      syncTouchLerp: r,\n      touchInertiaMultiplier: l,\n      duration: h,\n      easing: a,\n      lerp: c,\n      infinite: d,\n      gestureOrientation: u,\n      orientation: p,\n      touchMultiplier: m,\n      wheelMultiplier: v,\n      autoResize: g,\n      __experimental__naiveDimensions: S\n    }, this.animate = new Animate(), this.emitter = new Emitter(), this.dimensions = new Dimensions({\n      wrapper: t,\n      content: e,\n      autoResize: g\n    }), this.toggleClassName(\"lenis\", !0), this.velocity = 0, this.isLocked = !1, this.isStopped = !1, this.isSmooth = n || o, this.isScrolling = !1, this.targetScroll = this.animatedScroll = this.actualScroll, this.options.wrapper.addEventListener(\"scroll\", this.onNativeScroll, !1), this.virtualScroll = new VirtualScroll(s, {\n      touchMultiplier: m,\n      wheelMultiplier: v\n    }), this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n  }\n  destroy() {\n    this.emitter.destroy(), this.options.wrapper.removeEventListener(\"scroll\", this.onNativeScroll, !1), this.virtualScroll.destroy(), this.dimensions.destroy(), this.toggleClassName(\"lenis\", !1), this.toggleClassName(\"lenis-smooth\", !1), this.toggleClassName(\"lenis-scrolling\", !1), this.toggleClassName(\"lenis-stopped\", !1), this.toggleClassName(\"lenis-locked\", !1);\n  }\n  on(t, e) {\n    return this.emitter.on(t, e);\n  }\n  off(t, e) {\n    return this.emitter.off(t, e);\n  }\n  setScroll(t) {\n    this.isHorizontal ? this.rootElement.scrollLeft = t : this.rootElement.scrollTop = t;\n  }\n  resize() {\n    this.dimensions.resize();\n  }\n  emit() {\n    this.emitter.emit(\"scroll\", this);\n  }\n  reset() {\n    this.isLocked = !1, this.isScrolling = !1, this.animatedScroll = this.targetScroll = this.actualScroll, this.velocity = 0, this.animate.stop();\n  }\n  start() {\n    this.isStopped && (this.isStopped = !1, this.reset());\n  }\n  stop() {\n    this.isStopped || (this.isStopped = !0, this.animate.stop(), this.reset());\n  }\n  raf(t) {\n    const e = t - (this.time || t);\n    this.time = t, this.animate.advance(.001 * e);\n  }\n  scrollTo(e) {\n    let {\n      offset: i = 0,\n      immediate: s = !1,\n      lock: o = !1,\n      duration: n = this.options.duration,\n      easing: r = this.options.easing,\n      lerp: l = !n && this.options.lerp,\n      onComplete: h,\n      force: a = !1,\n      programmatic: c = !0\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isStopped && !this.isLocked || a) {\n      if ([\"top\", \"left\", \"start\"].includes(e)) e = 0;else if ([\"bottom\", \"right\", \"end\"].includes(e)) e = this.limit;else {\n        let t;\n        if (\"string\" == typeof e ? t = document.querySelector(e) : (null == e ? void 0 : e.nodeType) && (t = e), t) {\n          if (this.options.wrapper !== window) {\n            const t = this.options.wrapper.getBoundingClientRect();\n            i -= this.isHorizontal ? t.left : t.top;\n          }\n          const s = t.getBoundingClientRect();\n          e = (this.isHorizontal ? s.left : s.top) + this.animatedScroll;\n        }\n      }\n      if (\"number\" == typeof e) {\n        if (e += i, e = Math.round(e), this.options.infinite ? c && (this.targetScroll = this.animatedScroll = this.scroll) : e = t(0, e, this.limit), s) return this.animatedScroll = this.targetScroll = e, this.setScroll(this.scroll), this.reset(), void (null == h || h(this));\n        if (!c) {\n          if (e === this.targetScroll) return;\n          this.targetScroll = e;\n        }\n        this.animate.fromTo(this.animatedScroll, e, {\n          duration: n,\n          easing: r,\n          lerp: l,\n          onStart: () => {\n            o && (this.isLocked = !0), this.isScrolling = !0;\n          },\n          onUpdate: (t, e) => {\n            this.isScrolling = !0, this.velocity = t - this.animatedScroll, this.direction = Math.sign(this.velocity), this.animatedScroll = t, this.setScroll(this.scroll), c && (this.targetScroll = t), e || this.emit(), e && (this.reset(), this.emit(), null == h || h(this), this.__preventNextScrollEvent = !0, requestAnimationFrame(() => {\n              delete this.__preventNextScrollEvent;\n            }));\n          }\n        });\n      }\n    }\n  }\n  get rootElement() {\n    return this.options.wrapper === window ? document.documentElement : this.options.wrapper;\n  }\n  get limit() {\n    return this.options.__experimental__naiveDimensions ? this.isHorizontal ? this.rootElement.scrollWidth - this.rootElement.clientWidth : this.rootElement.scrollHeight - this.rootElement.clientHeight : this.dimensions.limit[this.isHorizontal ? \"x\" : \"y\"];\n  }\n  get isHorizontal() {\n    return \"horizontal\" === this.options.orientation;\n  }\n  get actualScroll() {\n    return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;\n  }\n  get scroll() {\n    return this.options.infinite ? (t = this.animatedScroll, e = this.limit, (t % e + e) % e) : this.animatedScroll;\n    var t, e;\n  }\n  get progress() {\n    return 0 === this.limit ? 1 : this.scroll / this.limit;\n  }\n  get isSmooth() {\n    return this.__isSmooth;\n  }\n  set isSmooth(t) {\n    this.__isSmooth !== t && (this.__isSmooth = t, this.toggleClassName(\"lenis-smooth\", t));\n  }\n  get isScrolling() {\n    return this.__isScrolling;\n  }\n  set isScrolling(t) {\n    this.__isScrolling !== t && (this.__isScrolling = t, this.toggleClassName(\"lenis-scrolling\", t));\n  }\n  get isStopped() {\n    return this.__isStopped;\n  }\n  set isStopped(t) {\n    this.__isStopped !== t && (this.__isStopped = t, this.toggleClassName(\"lenis-stopped\", t));\n  }\n  get isLocked() {\n    return this.__isLocked;\n  }\n  set isLocked(t) {\n    this.__isLocked !== t && (this.__isLocked = t, this.toggleClassName(\"lenis-locked\", t));\n  }\n  get className() {\n    let t = \"lenis\";\n    return this.isStopped && (t += \" lenis-stopped\"), this.isLocked && (t += \" lenis-locked\"), this.isScrolling && (t += \" lenis-scrolling\"), this.isSmooth && (t += \" lenis-smooth\"), t;\n  }\n  toggleClassName(t, e) {\n    this.rootElement.classList.toggle(t, e), this.emitter.emit(\"className change\", this);\n  }\n}\nexport { Lenis as default };","map":{"version":3,"names":["t","e","i","Math","max","min","Animate","advance","_this$onUpdate","isRunning","lerp","value","s","o","to","n","r","exp","round","currentTime","duration","easing","from","onUpdate","call","stop","fromTo","_ref","onStart","Dimensions","constructor","wrapper","content","autoResize","debounce","arguments","length","undefined","_defineProperty","onWrapperResize","onContentResize","window","width","innerWidth","height","innerHeight","clientWidth","clientHeight","scrollHeight","scrollWidth","debouncedResize","clearTimeout","setTimeout","apply","resize","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","_this$wrapperResizeOb","_this$contentResizeOb","disconnect","removeEventListener","limit","x","y","Emitter","events","emit","_len","Array","_key","on","_this$events$t","push","_this$events$t2","filter","off","_this$events$t3","VirtualScroll","_ref2","wheelMultiplier","touchMultiplier","clientX","clientY","targetTouches","touchStart","lastDelta","emitter","deltaX","deltaY","event","deltaMode","windowWidth","windowHeight","element","onWindowResize","onWheel","passive","onTouchStart","onTouchMove","onTouchEnd","Lenis","document","documentElement","wheelEventsTarget","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","l","h","a","pow","c","infinite","d","orientation","p","gestureOrientation","u","m","v","g","__experimental__naiveDimensions","S","__isSmooth","__isScrolling","__isStopped","__isLocked","onVirtualScroll","_ref3","ctrlKey","type","includes","options","isStopped","isLocked","reset","composedPath","slice","indexOf","rootElement","find","hasAttribute","classList","contains","preventDefault","isSmooth","isScrolling","animate","abs","velocity","scrollTo","targetScroll","Object","assign","programmatic","onNativeScroll","__preventNextScrollEvent","animatedScroll","actualScroll","direction","sign","lenisVersion","body","dimensions","toggleClassName","virtualScroll","setScroll","isHorizontal","scrollLeft","scrollTop","start","raf","time","offset","immediate","lock","onComplete","force","querySelector","nodeType","getBoundingClientRect","left","top","scroll","requestAnimationFrame","progress","className","toggle","default"],"sources":["G:\\aifinity\\node_modules\\@studio-freight\\lenis\\src\\maths.js","G:\\aifinity\\node_modules\\@studio-freight\\lenis\\src\\animate.js","G:\\aifinity\\node_modules\\@studio-freight\\lenis\\src\\dimensions.js","G:\\aifinity\\node_modules\\@studio-freight\\lenis\\src\\debounce.js","G:\\aifinity\\node_modules\\@studio-freight\\lenis\\src\\emitter.js","G:\\aifinity\\node_modules\\@studio-freight\\lenis\\src\\virtual-scroll.js","G:\\aifinity\\node_modules\\@studio-freight\\src\\index.ts"],"sourcesContent":["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener('resize', this.debouncedResize, false)\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener('resize', this.debouncedResize, false)\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  constructor(element, { wheelMultiplier = 1, touchMultiplier = 1 }) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n","import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\n\r\nexport type LenisOptions = {\r\n  wrapper?: Window | HTMLElement\r\n  content?: HTMLElement\r\n  wheelEventsTarget?: Window | HTMLElement\r\n  eventsTarget?: Window | HTMLElement\r\n  smoothWheel?: boolean\r\n  syncTouch?: boolean\r\n  syncTouchLerp?: number\r\n  touchInertiaMultiplier?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  lerp?: number\r\n  infinite?: boolean\r\n  orientation?: Orientation\r\n  gestureOrientation?: GestureOrientation\r\n  touchMultiplier?: number\r\n  wheelMultiplier?: number\r\n  autoResize?: boolean\r\n  __experimental__naiveDimensions?: boolean\r\n}\r\n\r\nexport default class Lenis {\r\n  __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: boolean = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      __experimental__naiveDimensions,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.toggleClassName('lenis', true)\r\n\r\n    this.velocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    this.isSmooth = syncTouch || smoothWheel\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.toggleClassName('lenis', false)\r\n    this.toggleClassName('lenis-smooth', false)\r\n    this.toggleClassName('lenis-scrolling', false)\r\n    this.toggleClassName('lenis-stopped', false)\r\n    this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          (node.classList?.contains('lenis') &&\r\n            !node.classList?.contains('lenis-stopped')) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    if (this.__preventNextScrollEvent) return\r\n\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextScrollEvent = true\r\n          requestAnimationFrame(() => {\r\n            delete this.__preventNextScrollEvent\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  private set isSmooth(value: boolean) {\r\n    if (this.__isSmooth !== value) {\r\n      this.__isSmooth = value\r\n      this.toggleClassName('lenis-smooth', value)\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: boolean) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.toggleClassName('lenis-scrolling', value)\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.toggleClassName('lenis-stopped', value)\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.toggleClassName('lenis-locked', value)\r\n    }\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private toggleClassName(name: string, value: boolean) {\r\n    this.rootElement.classList.toggle(name, value)\r\n    this.emitter.emit('className change', this)\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}